{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useContext}from'react';import UserItem from'./UserItem';import Spinner from'../layout/Spinner';import GithubContext from\"../../context/github/githubContext\";var Users=function Users(){var githubContext=useContext(GithubContext);var loading=githubContext.loading,users=githubContext.users;if(loading){return/*#__PURE__*/_jsx(Spinner,{});}else{return/*#__PURE__*/_jsx(\"div\",{style:userStyle,children:users.map(function(user){return/*#__PURE__*/_jsx(UserItem,{user:user},user.id);})});}};var userStyle={display:'grid',gridTemplateColumns:'repeat(3,1fr)',gridGap:'1rem'};export default Users;","map":{"version":3,"sources":["/home/smriti/projects/github-finder/src/components/users/Users.js"],"names":["React","useContext","UserItem","Spinner","GithubContext","Users","githubContext","loading","users","userStyle","map","user","id","display","gridTemplateColumns","gridGap"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,oCAA1B,CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAEhB,GAAMC,CAAAA,aAAa,CAAGL,UAAU,CAACG,aAAD,CAAhC,CAFgB,GAIRG,CAAAA,OAJQ,CAIWD,aAJX,CAIRC,OAJQ,CAICC,KAJD,CAIWF,aAJX,CAICE,KAJD,CAMb,GAAGD,OAAH,CAAW,CACP,mBAAO,KAAC,OAAD,IAAP,CACH,CAFD,IAEK,CAEJ,mBACI,YAAK,KAAK,CAAEE,SAAZ,UACKD,KAAK,CAACE,GAAN,CAAU,SAAAC,IAAI,qBACX,KAAC,QAAD,EAAwB,IAAI,CAAEA,IAA9B,EAAeA,IAAI,CAACC,EAApB,CADW,EAAd,CADL,EADJ,CAOF,CACL,CAlBD,CAmBA,GAAMH,CAAAA,SAAS,CAAG,CACfI,OAAO,CAAE,MADM,CAEfC,mBAAmB,CAAE,eAFN,CAGfC,OAAO,CAAE,MAHM,CAAlB,CASA,cAAeV,CAAAA,KAAf","sourcesContent":["import React, { useContext } from 'react'\nimport UserItem from './UserItem';\nimport Spinner from '../layout/Spinner';\nimport GithubContext from \"../../context/github/githubContext\";\n\n\nconst Users = () => {\n\n    const githubContext = useContext(GithubContext);\n\n    const { loading, users } = githubContext;\n\n       if(loading){\n           return <Spinner />\n       }else{\n\n        return (\n            <div style={userStyle}> \n                {users.map(user => (\n                    <UserItem key={user.id} user={user} />\n                ))}\n            </div>\n        )\n     }\n}\nconst userStyle = {\n   display: 'grid',\n   gridTemplateColumns: 'repeat(3,1fr)',\n   gridGap: '1rem'\n}\n\n\n\n\nexport default Users\n"]},"metadata":{},"sourceType":"module"}