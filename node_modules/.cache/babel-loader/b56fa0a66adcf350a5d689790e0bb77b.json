{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/home/smriti/projects/github-users-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/smriti/projects/github-users-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/smriti/projects/github-users-finder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useReducer}from'react';import axios from'axios';import GithubContext from'./githubContext';import GithubReducer from'./githubReducer';import{SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_USER,GET_REPOS}from'../types';var githubClientId;var githubClientSecret;if(process.env.NODE_ENV!=='production'){githubClientId=process.env.REACT_APP_GITHUB_CLIENT_ID;githubClientSecret=process.env.REACT_APP_GITHUB_CLIENT_SECRET;}else{githubClientId=process.env.GITHUB_CLIENT_ID;githubClientSecret=process.env.GITHUB_CLIENT_SECRET;}var GithubState=function GithubState(props){var initialState={users:[],user:{},repos:[],loading:false};var _useReducer=useReducer(GithubReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// Search Users\nvar searchUsers=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(text){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading();_context.next=3;return axios.get(\"https://api.github.com/search/users?q=\".concat(text,\"&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context.sent;dispatch({type:SEARCH_USERS,payload:res.data.items});case 5:case\"end\":return _context.stop();}}},_callee);}));return function searchUsers(_x){return _ref.apply(this,arguments);};}();// Get User\nvar getUser=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(username){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setLoading();_context2.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"?client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context2.sent;dispatch({type:GET_USER,payload:res.data});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function getUser(_x2){return _ref2.apply(this,arguments);};}();// Get Repos\nvar getUserRepos=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(username){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setLoading();_context3.next=3;return axios.get(\"https://api.github.com/users/\".concat(username,\"/repos?per_page=5&sort=created:asc&client_id=\").concat(githubClientId,\"&client_secret=\").concat(githubClientSecret));case 3:res=_context3.sent;dispatch({type:GET_REPOS,payload:res.data});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function getUserRepos(_x3){return _ref3.apply(this,arguments);};}();// Clear Users\nvar clearUsers=function clearUsers(){return dispatch({type:CLEAR_USERS});};// Set Loading\nvar setLoading=function setLoading(){return dispatch({type:SET_LOADING});};return/*#__PURE__*/_jsx(GithubContext.Provider,{value:{users:state.users,user:state.user,repos:state.repos,loading:state.loading,searchUsers:searchUsers,clearUsers:clearUsers,getUser:getUser,getUserRepos:getUserRepos},children:props.children});};export default GithubState;","map":{"version":3,"sources":["/home/smriti/projects/github-users-finder/src/context/github/GithubState.js"],"names":["React","useReducer","axios","GithubContext","GithubReducer","SEARCH_USERS","SET_LOADING","CLEAR_USERS","GET_USER","GET_REPOS","githubClientId","githubClientSecret","process","env","NODE_ENV","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","initialState","users","user","repos","loading","state","dispatch","searchUsers","text","setLoading","get","res","type","payload","data","items","getUser","username","getUserRepos","clearUsers","children"],"mappings":"wgBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,OACEC,YADF,CAEEC,WAFF,CAGEC,WAHF,CAIEC,QAJF,CAKEC,SALF,KAMO,UANP,CAQA,GAAIC,CAAAA,cAAJ,CACA,GAAIC,CAAAA,kBAAJ,CAEA,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCJ,cAAc,CAAGE,OAAO,CAACC,GAAR,CAAYE,0BAA7B,CACAJ,kBAAkB,CAAGC,OAAO,CAACC,GAAR,CAAYG,8BAAjC,CACD,CAHD,IAGO,CACLN,cAAc,CAAGE,OAAO,CAACC,GAAR,CAAYI,gBAA7B,CACAN,kBAAkB,CAAGC,OAAO,CAACC,GAAR,CAAYK,oBAAjC,CACD,CAGD,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3B,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,EADY,CAEnBC,IAAI,CAAE,EAFa,CAGnBC,KAAK,CAAE,EAHY,CAInBC,OAAO,CAAE,KAJU,CAArB,CAD2B,gBAQDxB,UAAU,CAACG,aAAD,CAAgBiB,YAAhB,CART,4CAQpBK,KARoB,iBAQbC,QARa,iBAU3B;AACA,GAAMC,CAAAA,WAAW,0FAAG,iBAAMC,IAAN,0HAClBC,UAAU,GADQ,sBAGA5B,CAAAA,KAAK,CAAC6B,GAAN,iDACyBF,IADzB,uBAC2CnB,cAD3C,2BAC2EC,kBAD3E,EAHA,QAGZqB,GAHY,eAOlBL,QAAQ,CAAC,CACPM,IAAI,CAAE5B,YADC,CAEP6B,OAAO,CAAEF,GAAG,CAACG,IAAJ,CAASC,KAFX,CAAD,CAAR,CAPkB,sDAAH,kBAAXR,CAAAA,WAAW,4CAAjB,CAaA;AACA,GAAMS,CAAAA,OAAO,2FAAG,kBAAMC,QAAN,8HACdR,UAAU,GADI,uBAGI5B,CAAAA,KAAK,CAAC6B,GAAN,wCACgBO,QADhB,uBACsC5B,cADtC,2BACsEC,kBADtE,EAHJ,QAGRqB,GAHQ,gBAOdL,QAAQ,CAAC,CACPM,IAAI,CAAEzB,QADC,CAEP0B,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAPc,wDAAH,kBAAPE,CAAAA,OAAO,8CAAb,CAaA;AACA,GAAME,CAAAA,YAAY,2FAAG,kBAAMD,QAAN,8HACnBR,UAAU,GADS,uBAGD5B,CAAAA,KAAK,CAAC6B,GAAN,wCACgBO,QADhB,yDACwE5B,cADxE,2BACwGC,kBADxG,EAHC,QAGbqB,GAHa,gBAOnBL,QAAQ,CAAC,CACPM,IAAI,CAAExB,SADC,CAEPyB,OAAO,CAAEF,GAAG,CAACG,IAFN,CAAD,CAAR,CAPmB,wDAAH,kBAAZI,CAAAA,YAAY,8CAAlB,CAaA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMb,CAAAA,QAAQ,CAAC,CAAEM,IAAI,CAAE1B,WAAR,CAAD,CAAd,EAAnB,CAEA;AACA,GAAMuB,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMH,CAAAA,QAAQ,CAAC,CAAEM,IAAI,CAAE3B,WAAR,CAAD,CAAd,EAAnB,CAEA,mBACE,KAAC,aAAD,CAAe,QAAf,EACE,KAAK,CAAE,CACLgB,KAAK,CAAEI,KAAK,CAACJ,KADR,CAELC,IAAI,CAAEG,KAAK,CAACH,IAFP,CAGLC,KAAK,CAAEE,KAAK,CAACF,KAHR,CAILC,OAAO,CAAEC,KAAK,CAACD,OAJV,CAKLG,WAAW,CAAXA,WALK,CAMLY,UAAU,CAAVA,UANK,CAOLH,OAAO,CAAPA,OAPK,CAQLE,YAAY,CAAZA,YARK,CADT,UAYGnB,KAAK,CAACqB,QAZT,EADF,CAgBD,CA1ED,CA4EA,cAAetB,CAAAA,WAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport GithubContext from './githubContext';\nimport GithubReducer from './githubReducer';\nimport {\n  SEARCH_USERS,\n  SET_LOADING,\n  CLEAR_USERS,\n  GET_USER,\n  GET_REPOS\n} from '../types';\n\nlet githubClientId;\nlet githubClientSecret;\n\nif (process.env.NODE_ENV !== 'production') {\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n} else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\n\nconst GithubState = props => {\n  const initialState = {\n    users: [],\n    user: {},\n    repos: [],\n    loading: false\n  };\n\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\n\n  // Search Users\n  const searchUsers = async text => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n  // Get User\n  const getUser = async username => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n\n    dispatch({\n      type: GET_USER,\n      payload: res.data\n    });\n  };\n\n  // Get Repos\n  const getUserRepos = async username => {\n    setLoading();\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n  };\n\n  // Clear Users\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\n\n  // Set Loading\n  const setLoading = () => dispatch({ type: SET_LOADING });\n\n  return (\n    <GithubContext.Provider\n      value={{\n        users: state.users,\n        user: state.user,\n        repos: state.repos,\n        loading: state.loading,\n        searchUsers,\n        clearUsers,\n        getUser,\n        getUserRepos\n      }}\n    >\n      {props.children}\n    </GithubContext.Provider>\n  );\n};\n\nexport default GithubState;"]},"metadata":{},"sourceType":"module"}